{"version":3,"file":"index.js","sources":["../../../rules/unified-latex-lint-consistent-inline-math/index.ts"],"sourcesContent":["import { lintRule } from \"unified-lint-rule\";\nimport * as Ast from \"@unified-latex/unified-latex-types\";\nimport { match } from \"@unified-latex/unified-latex-util-match\";\nimport { visit } from \"@unified-latex/unified-latex-util-visit\";\n\ntype PluginOptions = { preferredStyle: \"tex\" | \"latex\" } | undefined;\n\nexport const DESCRIPTION = `## Lint Rule\n\nAvoid mixing TeX-style inline math \\`$...$\\` with LaTeX-style \\`\\\\(...\\\\)\\` inline math.\n`;\n\nexport const unifiedLatexLintConsistentInlineMath = lintRule<\n    Ast.Root,\n    PluginOptions\n>(\n    { origin: \"unified-latex-lint:consistent-inline-math\" },\n    (tree, file, options) => {\n        const inlineMath: Record<\"tex\" | \"latex\", Ast.Node[]> = {\n            tex: [],\n            latex: [],\n        };\n\n        visit(\n            tree,\n            (node) => {\n                if (node.type !== \"inlinemath\" || node.position == null) {\n                    return;\n                }\n                if (\n                    file.value &&\n                    file.value.slice(\n                        node.position.start.offset,\n                        node.position.start.offset + 1\n                    ) === \"$\"\n                ) {\n                    inlineMath.tex.push(node);\n                } else {\n                    inlineMath.latex.push(node);\n                }\n            },\n            { test: match.math }\n        );\n\n        if (options?.preferredStyle) {\n            // If a preferred style is specified, we only check for things not matching the preferred style.\n            if (options.preferredStyle === \"tex\") {\n                for (const node of inlineMath.latex) {\n                    file.message(\n                        `Prefer TeX-style $...$ inline math to LaTeX-style \\\\(...\\\\)`,\n                        node\n                    );\n                }\n            }\n            if (options.preferredStyle === \"latex\") {\n                for (const node of inlineMath.latex) {\n                    file.message(\n                        `Prefer LaTeX-style \\\\(...\\\\) inline math to LaTeX-style $...$`,\n                        node\n                    );\n                }\n            }\n        } else {\n            // If there's not preferred style, we prefer the most commonly used style of the document\n            const numTex = inlineMath.tex.length;\n            const numLatex = inlineMath.latex.length;\n            if (numTex > 0 && numLatex > 0) {\n                if (numLatex > numTex) {\n                    for (const node of inlineMath.tex) {\n                        file.message(\n                            `Inconsistent inline-math style. This document uses LaTeX-style \\\\(...\\\\) inline math more than TeX-style $...$ inline math`,\n                            node\n                        );\n                    }\n                } else {\n                    for (const node of inlineMath.latex) {\n                        file.message(\n                            `Inconsistent inline-math style. This document uses TeX-style $...$ inline math more than LaTeX-style \\\\(...\\\\) inline math`,\n                            node\n                        );\n                    }\n                }\n            }\n        }\n    }\n);\n"],"names":[],"mappings":";;;AAOO,MAAM,cAAc;AAAA;AAAA;AAAA;AAKpB,MAAM,uCAAuC;AAAA,EAIhD,EAAE,QAAQ,4CAA4C;AAAA,EACtD,CAAC,MAAM,MAAM,YAAY;AACrB,UAAM,aAAkD;AAAA,MACpD,KAAK,CAAC;AAAA,MACN,OAAO,CAAC;AAAA,IAAA;AAGZ;AAAA,MACI;AAAA,MACA,CAAC,SAAS;AACN,YAAI,KAAK,SAAS,gBAAgB,KAAK,YAAY,MAAM;AACrD;AAAA,QACJ;AAEI,YAAA,KAAK,SACL,KAAK,MAAM;AAAA,UACP,KAAK,SAAS,MAAM;AAAA,UACpB,KAAK,SAAS,MAAM,SAAS;AAAA,cAC3B,KACR;AACa,qBAAA,IAAI,KAAK,IAAI;AAAA,QAAA,OACrB;AACQ,qBAAA,MAAM,KAAK,IAAI;AAAA,QAC9B;AAAA,MACJ;AAAA,MACA,EAAE,MAAM,MAAM,KAAK;AAAA,IAAA;AAGvB,QAAI,mCAAS,gBAAgB;AAErB,UAAA,QAAQ,mBAAmB,OAAO;AACvB,mBAAA,QAAQ,WAAW,OAAO;AAC5B,eAAA;AAAA,YACD;AAAA,YACA;AAAA,UAAA;AAAA,QAER;AAAA,MACJ;AACI,UAAA,QAAQ,mBAAmB,SAAS;AACzB,mBAAA,QAAQ,WAAW,OAAO;AAC5B,eAAA;AAAA,YACD;AAAA,YACA;AAAA,UAAA;AAAA,QAER;AAAA,MACJ;AAAA,IAAA,OACG;AAEG,YAAA,SAAS,WAAW,IAAI;AACxB,YAAA,WAAW,WAAW,MAAM;AAC9B,UAAA,SAAS,KAAK,WAAW,GAAG;AAC5B,YAAI,WAAW,QAAQ;AACR,qBAAA,QAAQ,WAAW,KAAK;AAC1B,iBAAA;AAAA,cACD;AAAA,cACA;AAAA,YAAA;AAAA,UAER;AAAA,QAAA,OACG;AACQ,qBAAA,QAAQ,WAAW,OAAO;AAC5B,iBAAA;AAAA,cACD;AAAA,cACA;AAAA,YAAA;AAAA,UAER;AAAA,QACJ;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;"}