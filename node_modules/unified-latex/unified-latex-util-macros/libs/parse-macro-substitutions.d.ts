import * as Ast from "../../unified-latex-types";
export interface HashNumber {
    type: "hash_number";
    number: number;
}
export declare function createMatchers(): {
    isHash: (node: Ast.Node) => boolean;
    isNumber: (node: Ast.Node) => boolean;
    splitNumber: (node: Ast.String) => {
        number: number;
        rest: {
            type: string;
            content: string;
        };
    } | {
        number: number;
        rest?: undefined;
    };
};
/**
 * Parse for macro substitutions. For example, in "\foo{#1}", the `#1`
 * is recognized as a `HashNumber` (`{type: "hash_number"}`). Double hashes
 * are automatically replaced with their single-hash substitutions.
 *
 * The resulting AST is ready for substitutions to be applied to it.
 */
export declare function parseMacroSubstitutions(ast: Ast.Node[]): (Ast.Node | HashNumber)[];
