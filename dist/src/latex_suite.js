import { getLatexSuiteConfig } from "./snippets/codemirror/config";
import { handleUndoRedo } from "./snippets/codemirror/history";
import { handleMathTooltip } from "./editor_extensions/math_tooltip";
export const handleUpdate = (update) => {
    const settings = getLatexSuiteConfig(update.state);
    // The math tooltip handler is driven by view updates because it utilizes
    // information about visual line, which is not available in EditorState
    if (settings.mathPreviewEnabled) {
        handleMathTooltip(update);
    }
    handleUndoRedo(update);
};
export const onKeydown = (event, view) => {
    //const success = handleKeydown(event.key, event.shiftKey, event.ctrlKey || event.metaKey, isComposing(view, event), view);
    //if (success) event.preventDefault();
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF0ZXhfc3VpdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbGF0ZXhfc3VpdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBV0EsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFFbkUsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBRS9ELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBR3JFLE1BQU0sQ0FBQyxNQUFNLFlBQVksR0FBRyxDQUFDLE1BQWtCLEVBQUUsRUFBRTtJQUNsRCxNQUFNLFFBQVEsR0FBRyxtQkFBbUIsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7SUFFbkQseUVBQXlFO0lBQ3pFLHVFQUF1RTtJQUN2RSxJQUFJLFFBQVEsQ0FBQyxrQkFBa0IsRUFBRSxDQUFDO1FBQ2pDLGlCQUFpQixDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQzNCLENBQUM7SUFFRCxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7QUFDeEIsQ0FBQyxDQUFBO0FBRUQsTUFBTSxDQUFDLE1BQU0sU0FBUyxHQUFHLENBQUMsS0FBb0IsRUFBRSxJQUFnQixFQUFFLEVBQUU7SUFDbkUsMkhBQTJIO0lBRTNILHNDQUFzQztBQUN2QyxDQUFDLENBQUEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFZGl0b3JWaWV3LCBWaWV3VXBkYXRlIH0gZnJvbSBcIkBjb2RlbWlycm9yL3ZpZXdcIjtcclxuXHJcbmltcG9ydCB7IHJ1blNuaXBwZXRzIH0gZnJvbSBcIi4vZmVhdHVyZXMvcnVuX3NuaXBwZXRzXCI7XHJcbmltcG9ydCB7IHJ1bkF1dG9GcmFjdGlvbiB9IGZyb20gXCIuL2ZlYXR1cmVzL2F1dG9mcmFjdGlvblwiO1xyXG5pbXBvcnQgeyB0YWJvdXQsIHNob3VsZFRhYm91dEJ5Q2xvc2VCcmFja2V0IH0gZnJvbSBcIi4vZmVhdHVyZXMvdGFib3V0XCI7XHJcbmltcG9ydCB7IHJ1bk1hdHJpeFNob3J0Y3V0cyB9IGZyb20gXCIuL2ZlYXR1cmVzL21hdHJpeF9zaG9ydGN1dHNcIjtcclxuXHJcbmltcG9ydCB7IENvbnRleHQgfSBmcm9tIFwiLi91dGlscy9jb250ZXh0XCI7XHJcbmltcG9ydCB7IGdldENoYXJhY3RlckF0UG9zLCByZXBsYWNlUmFuZ2UgfSBmcm9tIFwiLi91dGlscy9lZGl0b3JfdXRpbHNcIjtcclxuaW1wb3J0IHsgc2V0U2VsZWN0aW9uVG9OZXh0VGFic3RvcCB9IGZyb20gXCIuL3NuaXBwZXRzL3NuaXBwZXRfbWFuYWdlbWVudFwiO1xyXG5pbXBvcnQgeyByZW1vdmVBbGxUYWJzdG9wcyB9IGZyb20gXCIuL3NuaXBwZXRzL2NvZGVtaXJyb3IvdGFic3RvcHNfc3RhdGVfZmllbGRcIjtcclxuaW1wb3J0IHsgZ2V0TGF0ZXhTdWl0ZUNvbmZpZyB9IGZyb20gXCIuL3NuaXBwZXRzL2NvZGVtaXJyb3IvY29uZmlnXCI7XHJcbmltcG9ydCB7IGNsZWFyU25pcHBldFF1ZXVlIH0gZnJvbSBcIi4vc25pcHBldHMvY29kZW1pcnJvci9zbmlwcGV0X3F1ZXVlX3N0YXRlX2ZpZWxkXCI7XHJcbmltcG9ydCB7IGhhbmRsZVVuZG9SZWRvIH0gZnJvbSBcIi4vc25pcHBldHMvY29kZW1pcnJvci9oaXN0b3J5XCI7XHJcblxyXG5pbXBvcnQgeyBoYW5kbGVNYXRoVG9vbHRpcCB9IGZyb20gXCIuL2VkaXRvcl9leHRlbnNpb25zL21hdGhfdG9vbHRpcFwiO1xyXG5pbXBvcnQgeyBpc0NvbXBvc2luZyB9IGZyb20gXCIuL3V0aWxzL2VkaXRvcl91dGlsc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGhhbmRsZVVwZGF0ZSA9ICh1cGRhdGU6IFZpZXdVcGRhdGUpID0+IHtcclxuXHRjb25zdCBzZXR0aW5ncyA9IGdldExhdGV4U3VpdGVDb25maWcodXBkYXRlLnN0YXRlKTtcclxuXHJcblx0Ly8gVGhlIG1hdGggdG9vbHRpcCBoYW5kbGVyIGlzIGRyaXZlbiBieSB2aWV3IHVwZGF0ZXMgYmVjYXVzZSBpdCB1dGlsaXplc1xyXG5cdC8vIGluZm9ybWF0aW9uIGFib3V0IHZpc3VhbCBsaW5lLCB3aGljaCBpcyBub3QgYXZhaWxhYmxlIGluIEVkaXRvclN0YXRlXHJcblx0aWYgKHNldHRpbmdzLm1hdGhQcmV2aWV3RW5hYmxlZCkge1xyXG5cdFx0aGFuZGxlTWF0aFRvb2x0aXAodXBkYXRlKTtcclxuXHR9XHJcblxyXG5cdGhhbmRsZVVuZG9SZWRvKHVwZGF0ZSk7XHJcbn1cclxuXHJcbmV4cG9ydCBjb25zdCBvbktleWRvd24gPSAoZXZlbnQ6IEtleWJvYXJkRXZlbnQsIHZpZXc6IEVkaXRvclZpZXcpID0+IHtcclxuXHQvL2NvbnN0IHN1Y2Nlc3MgPSBoYW5kbGVLZXlkb3duKGV2ZW50LmtleSwgZXZlbnQuc2hpZnRLZXksIGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSwgaXNDb21wb3NpbmcodmlldywgZXZlbnQpLCB2aWV3KTtcclxuXHJcblx0Ly9pZiAoc3VjY2VzcykgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxufVxyXG4iXX0=