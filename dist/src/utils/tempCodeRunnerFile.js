create(data, string, depth, number, depthID, number);
Paren;
{
    const [type, state] = data.split('_');
    const normalizedType = type
        .replace(/^parentheses/, 'Parentheses')
        .replace(/^squareBrackets/, 'SquareBrackets')
        .replace(/^curlyBracket/, 'CurlyBracket');
    const normalizedState = state
        .replace(/^(open)$/, 'Open')
        .replace(/^(close)$/, "Close");
    if (!(normalizedType in BracketType) || !(normalizedState in BracketState)) {
        throw new Error(`Invalid type or state: ${normalizedType}, ${normalizedState}`);
    }
    console.log(normalizedType, normalizedState, normalizedState === BracketState.Open);
    return new Paren(BracketType[normalizedType], BracketState[normalizedState], depth, depthID);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVtcENvZGVSdW5uZXJGaWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL3RlbXBDb2RlUnVubmVyRmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBTyxNQUFNLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQTtBQUFFLEtBQUssQ0FBQTtBQUFDLENBQUM7SUFDNUQsTUFBTSxDQUFDLElBQUksRUFBRSxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3RDLE1BQU0sY0FBYyxHQUFHLElBQUk7U0FDMUIsT0FBTyxDQUFDLGNBQWMsRUFBRSxhQUFhLENBQUM7U0FDdEMsT0FBTyxDQUFDLGlCQUFpQixFQUFFLGdCQUFnQixDQUFDO1NBQzVDLE9BQU8sQ0FBQyxlQUFlLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDMUMsTUFBTSxlQUFlLEdBQUcsS0FBSztTQUN4QixPQUFPLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQztTQUMzQixPQUFPLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRW5DLElBQUksQ0FBQyxDQUFDLGNBQWMsSUFBSSxXQUFXLENBQUMsSUFBSSxDQUFDLENBQUMsZUFBZSxJQUFJLFlBQVksQ0FBQyxFQUFFLENBQUM7UUFDekUsTUFBTSxJQUFJLEtBQUssQ0FBQywwQkFBMEIsY0FBYyxLQUFLLGVBQWUsRUFBRSxDQUFDLENBQUM7SUFDcEYsQ0FBQztJQUVELE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLGVBQWUsRUFBRSxlQUFlLEtBQUssWUFBWSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBRXBGLE9BQU8sSUFBSSxLQUFLLENBQ1osV0FBVyxDQUFDLGNBQTBDLENBQUMsRUFDdkQsWUFBWSxDQUFDLGVBQTRDLENBQUMsRUFDMUQsS0FBSyxFQUNMLE9BQU8sQ0FDVixDQUFDO0FBQ04sQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbInN0YXRpYyBjcmVhdGUoZGF0YTogc3RyaW5nLCBkZXB0aDogbnVtYmVyLCBkZXB0aElEOiBudW1iZXIpOiBQYXJlbiB7XHJcbiAgICAgICAgY29uc3QgW3R5cGUsIHN0YXRlXSA9IGRhdGEuc3BsaXQoJ18nKTtcclxuICAgICAgICBjb25zdCBub3JtYWxpemVkVHlwZSA9IHR5cGVcclxuICAgICAgICAucmVwbGFjZSgvXnBhcmVudGhlc2VzLywgJ1BhcmVudGhlc2VzJylcclxuICAgICAgICAucmVwbGFjZSgvXnNxdWFyZUJyYWNrZXRzLywgJ1NxdWFyZUJyYWNrZXRzJylcclxuICAgICAgICAucmVwbGFjZSgvXmN1cmx5QnJhY2tldC8sICdDdXJseUJyYWNrZXQnKTtcclxuICAgICAgICBjb25zdCBub3JtYWxpemVkU3RhdGUgPSBzdGF0ZVxyXG4gICAgICAgICAgICAucmVwbGFjZSgvXihvcGVuKSQvLCAnT3BlbicpXHJcbiAgICAgICAgICAgIC5yZXBsYWNlKC9eKGNsb3NlKSQvLCBcIkNsb3NlXCIpO1xyXG4gICAgXHJcbiAgICAgICAgaWYgKCEobm9ybWFsaXplZFR5cGUgaW4gQnJhY2tldFR5cGUpIHx8ICEobm9ybWFsaXplZFN0YXRlIGluIEJyYWNrZXRTdGF0ZSkpIHtcclxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIHR5cGUgb3Igc3RhdGU6ICR7bm9ybWFsaXplZFR5cGV9LCAke25vcm1hbGl6ZWRTdGF0ZX1gKTtcclxuICAgICAgICB9XHJcbiAgICBcclxuICAgICAgICBjb25zb2xlLmxvZyhub3JtYWxpemVkVHlwZSwgbm9ybWFsaXplZFN0YXRlLCBub3JtYWxpemVkU3RhdGUgPT09IEJyYWNrZXRTdGF0ZS5PcGVuKTtcclxuICAgIFxyXG4gICAgICAgIHJldHVybiBuZXcgUGFyZW4oXHJcbiAgICAgICAgICAgIEJyYWNrZXRUeXBlW25vcm1hbGl6ZWRUeXBlIGFzIGtleW9mIHR5cGVvZiBCcmFja2V0VHlwZV0sXHJcbiAgICAgICAgICAgIEJyYWNrZXRTdGF0ZVtub3JtYWxpemVkU3RhdGUgYXMga2V5b2YgdHlwZW9mIEJyYWNrZXRTdGF0ZV0sXHJcbiAgICAgICAgICAgIGRlcHRoLFxyXG4gICAgICAgICAgICBkZXB0aElEXHJcbiAgICAgICAgKTtcclxuICAgIH0iXX0=