import { arrToRegexString, regExp } from "src/tikzjax/tikzjax";
import { escapeForRegex } from "src/utils/symbols";
export function getAllTikzReferences() {
    return [...tikzCommands, ...Brackets, ...units]
        .map(operator => operator.references || [])
        .flat()
        .map(escapeForRegex);
}
export function searchTizkCommands(query) {
    return [...tikzCommands, ...Brackets, ...units]
        .find(item => Object.values(item).flat().some((value) => typeof value === 'string' && value === query));
}
export function searchTizkForOgLatex(query) {
    return [...tikzCommands, ...Brackets, ...units]
        .find(item => item.name === query);
}
//Remember name syntax for commas exc
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGlrekNvbW1hbmRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3Rpa3pqYXgvdGlrekNvbW1hbmRzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHbkQsTUFBTSxVQUFVLG9CQUFvQjtJQUNoQyxPQUFPLENBQUMsR0FBRyxZQUFZLEVBQUMsR0FBRyxRQUFRLEVBQUMsR0FBRyxLQUFLLENBQUM7U0FDeEMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLFVBQVUsSUFBSSxFQUFFLENBQUM7U0FDMUMsSUFBSSxFQUFFO1NBQ04sR0FBRyxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQzdCLENBQUM7QUFFRCxNQUFNLFVBQVUsa0JBQWtCLENBQUMsS0FBSztJQUNwQyxPQUFPLENBQUMsR0FBRyxZQUFZLEVBQUMsR0FBRyxRQUFRLEVBQUMsR0FBRyxLQUFLLENBQUM7U0FDNUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQ1QsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUN0QyxPQUFPLEtBQUssS0FBSyxRQUFRLElBQUcsS0FBSyxLQUFLLEtBQUssQ0FDOUMsQ0FDSixDQUFDO0FBQ04sQ0FBQztBQUNELE1BQU0sVUFBVSxvQkFBb0IsQ0FBQyxLQUFLO0lBQ3RDLE9BQU8sQ0FBQyxHQUFHLFlBQVksRUFBQyxHQUFHLFFBQVEsRUFBQyxHQUFHLEtBQUssQ0FBQztTQUM1QyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FDVCxJQUFJLENBQUMsSUFBSSxLQUFHLEtBQUssQ0FDcEIsQ0FBQztBQUNOLENBQUM7QUFHRCxxQ0FBcUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhcnJUb1JlZ2V4U3RyaW5nLCByZWdFeHAgfSBmcm9tIFwic3JjL3Rpa3pqYXgvdGlrempheFwiO1xuaW1wb3J0IHsgZXNjYXBlRm9yUmVnZXggfSBmcm9tIFwic3JjL3V0aWxzL3N5bWJvbHNcIjtcblxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0QWxsVGlrelJlZmVyZW5jZXMoKSB7XG4gICAgcmV0dXJuIFsuLi50aWt6Q29tbWFuZHMsLi4uQnJhY2tldHMsLi4udW5pdHNdXG4gICAgICAgIC5tYXAob3BlcmF0b3IgPT4gb3BlcmF0b3IucmVmZXJlbmNlcyB8fCBbXSkgXG4gICAgICAgIC5mbGF0KClcbiAgICAgICAgLm1hcChlc2NhcGVGb3JSZWdleCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2hUaXprQ29tbWFuZHMocXVlcnkpe1xuICAgIHJldHVybiBbLi4udGlrekNvbW1hbmRzLC4uLkJyYWNrZXRzLC4uLnVuaXRzXVxuICAgIC5maW5kKGl0ZW0gPT5cbiAgICAgICAgT2JqZWN0LnZhbHVlcyhpdGVtKS5mbGF0KCkuc29tZSgodmFsdWUpID0+XG4gICAgICAgICAgICB0eXBlb2YgdmFsdWUgPT09ICdzdHJpbmcnICYmdmFsdWUgPT09IHF1ZXJ5LFxuICAgICAgICApXG4gICAgKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZWFyY2hUaXprRm9yT2dMYXRleChxdWVyeSl7XG4gICAgcmV0dXJuIFsuLi50aWt6Q29tbWFuZHMsLi4uQnJhY2tldHMsLi4udW5pdHNdXG4gICAgLmZpbmQoaXRlbSA9PlxuICAgICAgICBpdGVtLm5hbWU9PT1xdWVyeVxuICAgICk7XG59XG5cblxuLy9SZW1lbWJlciBuYW1lIHN5bnRheCBmb3IgY29tbWFzIGV4Y1xuXG5cbiJdfQ==