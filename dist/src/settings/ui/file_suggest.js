// Credits to https://github.com/liamcain/obsidian-periodic-notes
import { Vault } from "obsidian";
import { TextInputSuggest } from "./suggest";
export class FileSuggest extends TextInputSuggest {
    getSuggestions(inputStr) {
        const files = [];
        const lowerCaseInputStr = inputStr.toLowerCase();
        Vault.recurseChildren(this.app.vault.getRoot(), (file) => {
            if (file.path.toLowerCase().contains(lowerCaseInputStr)) {
                files.push(file);
            }
        });
        return files;
    }
    renderSuggestion(file, el) {
        el.setText(file.path);
    }
    selectSuggestion(file) {
        this.inputEl.value = file.path;
        this.inputEl.trigger("input");
        this.close();
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZV9zdWdnZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3NldHRpbmdzL3VpL2ZpbGVfc3VnZ2VzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxpRUFBaUU7QUFFakUsT0FBTyxFQUFpQixLQUFLLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFFaEQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBRTdDLE1BQU0sT0FBTyxXQUFZLFNBQVEsZ0JBQStCO0lBQy9ELGNBQWMsQ0FBQyxRQUFnQjtRQUU5QixNQUFNLEtBQUssR0FBb0IsRUFBRSxDQUFDO1FBQ2xDLE1BQU0saUJBQWlCLEdBQUcsUUFBUSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBRWpELEtBQUssQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRTtZQUN4RCxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLEVBQUUsQ0FBQztnQkFDekQsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUNsQixDQUFDO1FBQ0YsQ0FBQyxDQUFDLENBQUM7UUFFSCxPQUFPLEtBQUssQ0FBQztJQUNkLENBQUM7SUFFRCxnQkFBZ0IsQ0FBQyxJQUFtQixFQUFFLEVBQWU7UUFDcEQsRUFBRSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkIsQ0FBQztJQUVELGdCQUFnQixDQUFDLElBQW1CO1FBQ25DLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDL0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDO0lBQ2QsQ0FBQztDQUNEIiwic291cmNlc0NvbnRlbnQiOlsiLy8gQ3JlZGl0cyB0byBodHRwczovL2dpdGh1Yi5jb20vbGlhbWNhaW4vb2JzaWRpYW4tcGVyaW9kaWMtbm90ZXNcblxuaW1wb3J0IHsgVEFic3RyYWN0RmlsZSwgVmF1bHQgfSBmcm9tIFwib2JzaWRpYW5cIjtcblxuaW1wb3J0IHsgVGV4dElucHV0U3VnZ2VzdCB9IGZyb20gXCIuL3N1Z2dlc3RcIjtcblxuZXhwb3J0IGNsYXNzIEZpbGVTdWdnZXN0IGV4dGVuZHMgVGV4dElucHV0U3VnZ2VzdDxUQWJzdHJhY3RGaWxlPiB7XG5cdGdldFN1Z2dlc3Rpb25zKGlucHV0U3RyOiBzdHJpbmcpOiBUQWJzdHJhY3RGaWxlW10ge1xuXG5cdFx0Y29uc3QgZmlsZXM6IFRBYnN0cmFjdEZpbGVbXSA9IFtdO1xuXHRcdGNvbnN0IGxvd2VyQ2FzZUlucHV0U3RyID0gaW5wdXRTdHIudG9Mb3dlckNhc2UoKTtcblxuXHRcdFZhdWx0LnJlY3Vyc2VDaGlsZHJlbih0aGlzLmFwcC52YXVsdC5nZXRSb290KCksIChmaWxlKSA9PiB7XG5cdFx0XHRpZiAoZmlsZS5wYXRoLnRvTG93ZXJDYXNlKCkuY29udGFpbnMobG93ZXJDYXNlSW5wdXRTdHIpKSB7XG5cdFx0XHRcdGZpbGVzLnB1c2goZmlsZSk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRyZXR1cm4gZmlsZXM7XG5cdH1cblxuXHRyZW5kZXJTdWdnZXN0aW9uKGZpbGU6IFRBYnN0cmFjdEZpbGUsIGVsOiBIVE1MRWxlbWVudCk6IHZvaWQge1xuXHRcdGVsLnNldFRleHQoZmlsZS5wYXRoKTtcblx0fVxuXG5cdHNlbGVjdFN1Z2dlc3Rpb24oZmlsZTogVEFic3RyYWN0RmlsZSk6IHZvaWQge1xuXHRcdHRoaXMuaW5wdXRFbC52YWx1ZSA9IGZpbGUucGF0aDtcblx0XHR0aGlzLmlucHV0RWwudHJpZ2dlcihcImlucHV0XCIpO1xuXHRcdHRoaXMuY2xvc2UoKTtcblx0fVxufVxuIl19